<html>
<title>Hilih Khintil</title>
<center><b>WHO's ME?</b></center>
<center><img src="http://bestanimations.com/Flags/Asia/indonesia/indonesian-flag-waving-gif-animation-10.gif"></center>
<h2 class="kotha">MESSAGE:</h2>
			<style>
  

  html,body {
    font-family: 'Roboto Mono', monospace;
    background: #00000
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
  }
  .container {
    
    justify-content: center;
    align-items: center;
    display: flex;
  }.text {
    font-weight: 100;
    margin-bottom: 0px;
    font-size: 33px;
    color: Black;
  }
  .dud {
    color: #757575;
  }
  footer{
    position: ;
    background: transparent;
  }
  a{
    position: fixed;
    right: 20px;
    bottom: 20px;
    text-decoration: none;
    font-family: Iceland;
    color: white;
    text-shadow: 0px 0px 18px #00ffff;
    font-size: 26px;
  }
</style>
<body oncontextmenu="return false;" onkeydown="return false;" onmousedown="return false;">
  <div class="container">
  <div class="text"></div>
</div><br><br>

			<script>
    'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }


var TextScramble = function () {
  function TextScramble(el) {
    _classCallCheck(this, TextScramble);

    this.el = el;
    this.chars = 'qwertyuioplkjhgfdsazxcvbnm,.';
    this.update = this.update.bind(this);
  }

  TextScramble.prototype.setText = function setText(newText) {
    var _this = this;

    var oldText = this.el.innerText;
    var length = Math.max(oldText.length, newText.length);
    var promise = new Promise(function (resolve) {
      return _this.resolve = resolve;
    });
    this.queue = [];
    for (var i = 0; i < length; i++) {
      var from = oldText[i] || '';
      var to = newText[i] || '';
      var start = Math.floor(Math.random() * 100);
      var end = start + Math.floor(Math.random() * 100);
      this.queue.push({ from: from, to: to, start: start, end: end });
    }
    cancelAnimationFrame(this.frameRequest);
    this.frame = 0;
    this.update();
    return promise;
  };

  TextScramble.prototype.update = function update() {
    var output = '';
    var complete = 0;
    for (var i = 0, n = this.queue.length; i < n; i++) {
      var _queue$i = this.queue[i];
      var from = _queue$i.from;
      var to = _queue$i.to;
      var start = _queue$i.start;
      var end = _queue$i.end;
      var char = _queue$i.char;

      if (this.frame >= end) {
        complete++;
        output += to;
      } else if (this.frame >= start) {
        if (!char || Math.random() < 0.1) {
          char = this.randomChar();
          this.queue[i].char = char;
        }
        output += '<span class="dud">' + char + '</span>';
      } else {
        output += from;
      }
    }
    this.el.innerHTML = output;
    if (complete === this.queue.length) {
      this.resolve();
    } else {
      this.frameRequest = requestAnimationFrame(this.update);
      this.frame++;
    }
  };

  TextScramble.prototype.randomChar = function randomChar() {
    return this.chars[Math.floor(Math.random() * this.chars.length)];
  };

  return TextScramble;
}();

// ??????????????????????????????????????????????????
// Example
// ??????????????????????????????????????????????????

var phrases = ['Assalamu Alaikum','The Site  Hacked By HO4R KOD3','Ã™â€žÃ™Å½Ã˜Â¢ Ã˜Â§Ã™ÂÃ™â€žÃ™Â°Ã™â€¡Ã™Å½ Ã˜Â§Ã™ÂÃ™â€žÃ™Å½Ã™â€˜Ã˜Â§ Ã˜Â§Ã™â€žÃ™â€žÃ™â€˜Ã™Â°Ã™â€¡Ã™Â Ã™â€¦Ã™ÂÃ˜Â­Ã™Å½Ã™â€¦Ã™Å½Ã™â€˜Ã˜Â¯Ã™Å’ Ã˜Â±Ã™Å½Ã™â€˜Ã˜Â³Ã™ÂÃ™Ë†Ã™â€™Ã™â€žÃ™Â Ã˜Â§Ã™â€žÃ™â€žÃ™â€˜Ã™Â°Ã™â€¡Ã™ÂÃ˜â€¢','Security Is JuXt An illusi0N  &#128405;','Born To Break Security !','Please Patch Your Security','BYE :|'];

var el = document.querySelector('.text');
var fx = new TextScramble(el);

var counter = 0;
var next = function next() {
  fx.setText(phrases[counter]).then(function () {
    setTimeout(next, 4000);
  });
  counter = (counter + 1) % phrases.length;
};

next();
  </script>
